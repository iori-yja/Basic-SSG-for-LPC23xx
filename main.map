
Allocating common symbols
Common symbol       size              file

dstnsb              0x4               main.o
dstnsa              0x4               main.o
status              0x4               main.o

Discarded input sections

 .data          0x00000000        0x0 asmfunc.o
 .text          0x00000000        0x0 main.o
 .data          0x00000000        0x0 main.o
 .bss           0x00000000        0x0 main.o
 .text.Delay    0x00000000       0x2c main.o
 COMMON         0x00000000        0xc main.o
 .text          0x00000000        0x0 drv.o
 .data          0x00000000        0x0 drv.o
 .bss           0x00000000        0x0 drv.o

Memory Configuration

Name             Origin             Length             Attributes
ROM              0x00000000         0x0007e000         xr
RAM              0x40000000         0x0000ffe0         w
URAM             0x7fd00000         0x00004000         w
ERAM             0x7fe00000         0x00004000         w
BRAM             0xe0084000         0x00000800         w
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD asmfunc.o
LOAD main.o
LOAD drv.o
LOAD /opt/SourceryG++Lite/bin/../lib/gcc/arm-none-eabi/4.5.1/../../../../arm-none-eabi/lib/libc.a
LOAD /opt/SourceryG++Lite/bin/../lib/gcc/arm-none-eabi/4.5.1/../../../../arm-none-eabi/lib/libm.a
LOAD /opt/SourceryG++Lite/bin/../lib/gcc/arm-none-eabi/4.5.1/../../../../arm-none-eabi/lib/libc.a
LOAD /opt/SourceryG++Lite/bin/../lib/gcc/arm-none-eabi/4.5.1/libgcc.a
START GROUP
LOAD /opt/SourceryG++Lite/bin/../lib/gcc/arm-none-eabi/4.5.1/libgcc.a
LOAD /opt/SourceryG++Lite/bin/../lib/gcc/arm-none-eabi/4.5.1/../../../../arm-none-eabi/lib/libc.a
END GROUP

.text           0x00000000      0x668
 *(.VECTOR)
 .VECTOR        0x00000000       0x40 asmfunc.o
 *(.text .text.*)
 .text          0x00000040      0x394 asmfunc.o
                0x000001f4                IrqDisable
                0x000001fc                IrqEnable
                0x00000204                FiqDisable
                0x0000020c                FiqEnable
                0x00000214                ClearVector
                0x0000021c                RegisterVector
                0x00000224                StartTask
                0x00000238                DispatchTask
                0x0000026c                Sleep
                0x0000028c                Load_Block
                0x000002fc                Store_Block
 .text.Isr_TIMER0
                0x000003d4       0x28 main.o
                0x000003d4                Isr_TIMER0
 .text.Delay_ms
                0x000003fc       0x1c main.o
                0x000003fc                Delay_ms
 .text.ymzwritelong
                0x00000418       0x64 main.o
                0x00000418                ymzwritelong
 .text.ymzwritebyte
                0x0000047c       0x30 main.o
                0x0000047c                ymzwritebyte
 .text.main     0x000004ac      0x11c main.o
                0x000004ac                main
 .text.set_pll  0x000005c8       0xa0 drv.o
                0x000005c8                set_pll
 *(.gnu.linkonce.t.*)
 *(.glue_7)
 .glue_7        0x00000000        0x0 linker stubs
 *(.glue_7t)
 .glue_7t       0x00000000        0x0 linker stubs
 *(.gcc_except_table)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.r.*)
                0x00000668                . = ALIGN (0x4)

.vfp11_veneer   0x00000668        0x0
 .vfp11_veneer  0x00000000        0x0 linker stubs

.v4_bx          0x00000668        0x0
 .v4_bx         0x00000000        0x0 linker stubs
                0x00000668                . = ALIGN (0x4)
                0x00000668                _etext = .
                0x00000668                PROVIDE (etext, .)

.data           0x40000000        0x4 load address 0x00000668
                0x40000000                _data = .
 *(.data)
 *(.data.*)
 .data.g_i      0x40000000        0x4 main.o
                0x40000000                g_i
 *(.gnu.linkonce.d*)
                0x40000004                . = ALIGN (0x4)
                0x40000004                . = ALIGN (0x4)
                0x40000004                _edata = .
                0x40000004                PROVIDE (edata, .)

.bss            0x40000004        0x8 load address 0x0000066c
                0x40000004                __bss_start = .
                0x40000004                __bss_start__ = .
 *(.bss)
 .bss           0x40000004        0x8 asmfunc.o
 *(.bss.*)
 *(.gnu.linkonce.b*)
 *(COMMON)
                0x4000000c                . = ALIGN (0x4)
                0x4000000c                . = ALIGN (0x4)
                0x4000000c                __bss_end__ = .
                0x4000000c                PROVIDE (__bss_end, .)

.stack          0x40000010      0xa00
 *(.stack)
 *(.STACK)
 .STACK         0x40000010      0xa00 asmfunc.o
                0x40000a10                PROVIDE (_stack, .)
                0x40000a10                . = ALIGN (0x4)
                0x40000a10                _end = .
                0x40000a10                PROVIDE (end, .)

.usbram         0x7fd00000        0x0
                0x7fd00000                __usbram_start = .
                0x7fd00000                __usbram_start__ = .
 *(.usbram)
                0x7fd00000                . = ALIGN (0x4)

.etherram       0x7fe00000        0x0
                0x7fe00000                __etherram_start = .
                0x7fe00000                __etherram_start__ = .
 *(.etherram)
                0x7fe00000                . = ALIGN (0x4)

.batteryram     0xe0084000        0x0
                0xe0084000                __batteryram_start = .
                0xe0084000                __batteryram_start__ = .
 *(.batteryram)
                0xe0084000                . = ALIGN (0x4)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.HEAP           0x00000000        0x0
 .HEAP          0x00000000        0x0 asmfunc.o

.ARM.attributes
                0x00000000       0x30
 .ARM.attributes
                0x00000000       0x24 asmfunc.o
 .ARM.attributes
                0x00000024       0x34 main.o
 .ARM.attributes
                0x00000058       0x34 drv.o

.comment        0x00000000       0x2a
 *(.comment)
 .comment       0x00000000       0x2a main.o
                                 0x2b (size before relaxing)
 .comment       0x00000000       0x2b drv.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0x90
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x28 asmfunc.o
 .debug_aranges
                0x00000028       0x48 main.o
 .debug_aranges
                0x00000070       0x20 drv.o

.debug_pubnames
                0x00000000       0xcb
 *(.debug_pubnames)
 .debug_pubnames
                0x00000000       0x8c main.o
 .debug_pubnames
                0x0000008c       0x3f drv.o

.debug_info     0x00000000      0x26c
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x00000000       0x54 asmfunc.o
 .debug_info    0x00000054      0x196 main.o
 .debug_info    0x000001ea       0x82 drv.o

.debug_abbrev   0x00000000      0x160
 *(.debug_abbrev)
 .debug_abbrev  0x00000000       0x12 asmfunc.o
 .debug_abbrev  0x00000012       0xfc main.o
 .debug_abbrev  0x0000010e       0x52 drv.o

.debug_line     0x00000000      0x27e
 *(.debug_line)
 .debug_line    0x00000000      0x12f asmfunc.o
 .debug_line    0x0000012f       0xf6 main.o
 .debug_line    0x00000225       0x59 drv.o

.debug_frame    0x00000000       0xa8
 *(.debug_frame)
 .debug_frame   0x00000000       0x88 main.o
 .debug_frame   0x00000088       0x20 drv.o

.debug_str      0x00000000       0xc8
 *(.debug_str)
 .debug_str     0x00000000       0xba main.o
                                 0xc7 (size before relaxing)
 .debug_str     0x000000ba        0xe drv.o
                                 0x61 (size before relaxing)

.debug_loc      0x00000000       0xfe
 *(.debug_loc)
 .debug_loc     0x00000000       0xfe main.o

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)
OUTPUT(main.elf elf32-littlearm)

.debug_ranges   0x00000000       0x68
 .debug_ranges  0x00000000       0x20 asmfunc.o
 .debug_ranges  0x00000020       0x38 main.o
 .debug_ranges  0x00000058       0x10 drv.o

Cross Reference Table

Symbol                                            File
ClearVector                                       asmfunc.o
Delay                                             main.o
Delay_ms                                          main.o
DispatchTask                                      asmfunc.o
FiqDisable                                        asmfunc.o
FiqEnable                                         asmfunc.o
IrqDisable                                        asmfunc.o
IrqEnable                                         asmfunc.o
                                                  main.o
Isr_TIMER0                                        main.o
Load_Block                                        asmfunc.o
RegisterVector                                    asmfunc.o
                                                  main.o
Sleep                                             asmfunc.o
StartTask                                         asmfunc.o
Store_Block                                       asmfunc.o
__bss_end__                                       asmfunc.o
__bss_start__                                     asmfunc.o
_data                                             asmfunc.o
_edata                                            asmfunc.o
_etext                                            asmfunc.o
dstnsa                                            drv.o
                                                  main.o
dstnsb                                            drv.o
                                                  main.o
g_i                                               main.o
main                                              main.o
                                                  asmfunc.o
set_pll                                           drv.o
                                                  main.o
status                                            drv.o
                                                  main.o
ymzwritebyte                                      main.o
ymzwritelong                                      main.o
